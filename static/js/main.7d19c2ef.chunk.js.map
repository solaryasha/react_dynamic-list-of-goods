{"version":3,"sources":["API/API.ts","Components/GoodItem/GoodItem.tsx","Components/GoodsList/GoodsList.tsx","Components/Button/Button.tsx","App.tsx","index.tsx"],"names":["getGoods","fetch","then","response","ok","json","Error","statusText","GoodItem","name","color","style","GoodsList","goods","map","id","key","Button","text","onClick","type","App","state","getAllGoods","data","setState","catch","error","message","get5FirstGoods","sort","a","b","localeCompare","slice","getRedGoods","filter","item","this","Component","ReactDOM","render","document","getElementById"],"mappings":"6OAIaA,G,MAAW,WACtB,OAAOC,MAHG,2CAIPC,MAAK,SAAAC,GACJ,GAAIA,EAASC,GACX,OAAOD,EAASE,OAGlB,MAAM,IAAIC,MAAMH,EAASI,iBCLlBC,EAAsB,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,MAC1C,OACE,wBAAIC,MAAO,CAAED,UAAUD,ICAdG,EAAuB,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OAClC,4BACGA,EAAMC,KAAI,gBAAGC,EAAH,EAAGA,GAAIN,EAAP,EAAOA,KAAMC,EAAb,EAAaA,MAAb,OACT,kBAAC,EAAD,CAAUM,IAAKD,EAAIN,KAAMA,EAAMC,MAAOA,SCJ/BO,EAAoB,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAAT,OAC/B,4BACEC,KAAK,SACLD,QAAS,kBAAMA,MAEdD,ICDQG,EAAb,4MACEC,MAAe,CACbT,MAAO,IAFX,EAKEU,YAAc,WACZvB,IACGE,MAAK,gBAAGsB,EAAH,EAAGA,KAAH,OAAyB,EAAKC,SAAS,CAC3CZ,MAAOW,OAERE,OAAM,SAAAC,GACL,MAAM,IAAIrB,MAAMqB,EAAMC,aAX9B,EAeEC,eAAiB,WACf7B,IACGE,MAAK,gBAAGsB,EAAH,EAAGA,KAAH,OAAyB,EAAKC,SAAS,CAC3CZ,MAAOW,EACJM,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEtB,KAAKwB,cAAcD,EAAEvB,SACtCyB,MAAM,EAAG,QAEbR,OAAM,SAAAC,GACL,MAAM,IAAIrB,MAAMqB,EAAMC,aAvB9B,EA2BEO,YAAc,WACZnC,IACGE,MAAK,gBAAGsB,EAAH,EAAGA,KAAH,OAAyB,EAAKC,SAAS,CAC3CZ,MAAOW,EAAKY,QAAO,SAAAC,GAAI,MAAmB,QAAfA,EAAK3B,cAEjCgB,OAAM,SAAAC,GACL,MAAM,IAAIrB,MAAMqB,EAAMC,aAjC9B,uDAqCY,IACAf,EAAUyB,KAAKhB,MAAfT,MAER,OACE,6BACE,kBAAC,EAAD,CACEK,KAAK,iBACLC,QAASmB,KAAKf,cAGhB,kBAAC,EAAD,CACEL,KAAK,qBACLC,QAASmB,KAAKT,iBAEhB,kBAAC,EAAD,CACEX,KAAK,iBACLC,QAASmB,KAAKH,cAGhB,kBAAC,EAAD,CAAWtB,MAAOA,SAxD1B,GAAyB0B,aCPzBC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.7d19c2ef.chunk.js","sourcesContent":["import { GoodsData } from '../types';\n\nconst url = 'https://mate.academy/students-api/goods';\n\nexport const getGoods = (): Promise<GoodsData> => {\n  return fetch(url)\n    .then(response => {\n      if (response.ok) {\n        return response.json();\n      }\n\n      throw new Error(response.statusText);\n    });\n};\n","import React, { FC } from 'react';\n\ntype Props = {\n  name: string;\n  color: string;\n};\nexport const GoodItem: FC<Props> = ({ name, color }) => {\n  return (\n    <li style={{ color }}>{name}</li>\n  );\n};\n","import React, { FC } from 'react';\nimport { Good } from '../../types';\nimport { GoodItem } from '../GoodItem/GoodItem';\n\ntype Props = {\n  goods: Good[];\n};\n\nexport const GoodsList: FC<Props> = ({ goods }) => (\n  <ul>\n    {goods.map(({ id, name, color }) => (\n      <GoodItem key={id} name={name} color={color} />\n    ))}\n  </ul>\n);\n","import React, { FC } from 'react';\n\ntype Props = {\n  text: string;\n  onClick: CallableFunction;\n};\n\nexport const Button: FC<Props> = ({ text, onClick }) => (\n  <button\n    type=\"button\"\n    onClick={() => onClick()}\n  >\n    {text}\n  </button>\n);\n","import React, { Component } from 'react';\nimport './App.css';\nimport { Good, GoodsData } from './types';\nimport { getGoods } from './API/API';\nimport { GoodsList } from './Components/GoodsList/GoodsList'\nimport { Button } from './Components/Button/Button';\n\ntype State = {\n  goods: Good[];\n};\n\nexport class App extends Component<{}, State> {\n  state: State = {\n    goods: [],\n  };\n\n  getAllGoods = () => {\n    getGoods()\n      .then(({ data }: GoodsData) => this.setState({\n        goods: data,\n      }))\n      .catch(error => {\n        throw new Error(error.message);\n      });\n  };\n\n  get5FirstGoods = () => {\n    getGoods()\n      .then(({ data }: GoodsData) => this.setState({\n        goods: data\n          .sort((a, b) => a.name.localeCompare(b.name))\n          .slice(0, 5),\n      }))\n      .catch(error => {\n        throw new Error(error.message);\n      });\n  };\n\n  getRedGoods = () => {\n    getGoods()\n      .then(({ data }: GoodsData) => this.setState({\n        goods: data.filter(item => item.color === 'red'),\n      }))\n      .catch(error => {\n        throw new Error(error.message);\n      });\n  };\n\n  render() {\n    const { goods } = this.state;\n\n    return (\n      <div>\n        <Button\n          text=\"Load All goods\"\n          onClick={this.getAllGoods}\n        />\n\n        <Button\n          text=\"Load 5 first goods\"\n          onClick={this.get5FirstGoods}\n        />\n        <Button\n          text=\"Load red goods\"\n          onClick={this.getRedGoods}\n        />\n\n        <GoodsList goods={goods} />\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}